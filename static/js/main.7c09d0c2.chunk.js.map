{"version":3,"sources":["utils/api.ts","components/Checkbox/Checkbox.tsx","components/SearchInput/SearchInput.tsx","containers/CongressList/CongressList.tsx","App.tsx","containers/CongressPersonDetail/CongressPersonDetail.tsx","serviceWorker.ts","index.tsx"],"names":["axios","create","baseURL","headers","getMembers","congress","chamber","a","get","console","error","fetchData","Checkbox","name","checked","onChange","className","id","type","htmlFor","checkboxes","key","SearchInput","data","onSearch","useState","searchTerm","setSearchTerm","isVisible","setIsVisible","checkedItems","setCheckedItems","handleChangeCheckbox","event","target","useEffect","placeholder","value","onClick","map","item","CongressList","history","members","setMembers","membersFiltered","setMembersFiltered","result","results","d","title","short_title","first_name","middle_name","last_name","date_of_birth","gender","party","twitter_account","facebook_account","youtube_account","url","state","length","checkbox","Object","keys","find","element","log","findFilter","filter","member","values","join","toLowerCase","match","index","Fragment","push","pathname","routes","path","component","location","memberInfo","goBack","href","viewBox","width","height","App","route","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c09d0c2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { CongressMember } from \"../models/models\";\r\n\r\nconst API_KEY: string = \"GcA9m1XG4KrtYDZQ0LNnEScScnKrp9Nqi3dKHv2y\";\r\n\r\naxios.create({\r\n  baseURL: \"https://api.propublica.org/congress/v1\",\r\n  headers: {\r\n    \"X-API-Key\": API_KEY\r\n  }\r\n});\r\n\r\nexport const getMembers: any = (congress: number, chamber: string) => {\r\n  const fetchData = async () => {\r\n    try {\r\n      return await axios.get(\r\n        `https://api.propublica.org/congress/v1/${congress}/${chamber}/members.json`,\r\n        {\r\n          headers: {\r\n            \"X-API-Key\": \"GcA9m1XG4KrtYDZQ0LNnEScScnKrp9Nqi3dKHv2y\"\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return fetchData();\r\n};\r\n","import React, { FC, ChangeEvent } from \"react\";\nimport \"./CheckboxStyles.scss\";\n\ntype Props = {\n  name: string;\n  checked: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Checkbox: FC<Props> = ({ name, checked = false, onChange }) => {\n  return (\n    <div className=\"checkbox\">\n      <input\n        id={name}\n        type=\"checkbox\"\n        name={name}\n        checked={checked}\n        onChange={onChange}\n      />\n      <label htmlFor={name} className=\"checkbox__label\">\n        {name}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import React, { FC, useState, ChangeEvent, useEffect } from \"react\";\nimport { CongressMember, CheckboxItems } from \"../../models/models\";\nimport Checkbox from \"../Checkbox/Checkbox\";\n\ntype Props = {\n  data: CongressMember[];\n  onSearch: (\n    data: CongressMember[],\n    value: string,\n    checkbox: CheckboxItems\n  ) => any;\n};\n\nconst checkboxes = [\n  { name: \"Name\", key: 0 },\n  { name: \"Party\", key: 1 },\n  { name: \"Gender\", key: 2 },\n  { name: \"State\", key: 3 }\n];\n\nconst SearchInput: FC<Props> = ({ data, onSearch }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n  const [checkedItems, setCheckedItems] = useState<any>({});\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleChangeCheckbox = (event: ChangeEvent<HTMLInputElement>) => {\n    setCheckedItems({\n      ...checkedItems,\n      [event.target.name]: event.target.checked,\n      checked: event.target.checked\n    });\n  };\n\n  const handleClickToggle = () => {\n    setIsVisible(!isVisible);\n  };\n\n  useEffect(() => {\n    onSearch(data, searchTerm, checkedItems);\n  }, [searchTerm, checkedItems]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      <button onClick={handleClickToggle}>Advanced Search</button>\n\n      {isVisible &&\n        checkboxes.map(item => (\n          <Checkbox\n            key={item.key}\n            name={item.name}\n            checked={checkedItems[item.name]}\n            onChange={handleChangeCheckbox}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default SearchInput;\n","import React, { FC, useState, useEffect } from \"react\";\r\nimport { CongressMember, CheckboxItems } from \"../../models/models\";\r\nimport \"./CongressListStyles.scss\";\r\nimport { getMembers } from \"../../utils/api\";\r\nimport SearchInput from \"../../components/SearchInput/SearchInput\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\ntype Props = RouteComponentProps;\r\n\r\nconst CongressList: FC<Props> = ({ history }) => {\r\n  const [members, setMembers] = useState<CongressMember[]>([]);\r\n  const [membersFiltered, setMembersFiltered] = useState<CongressMember[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await getMembers(116, \"senate\");\r\n      const data = result.data.results[0].members;\r\n      setMembers(\r\n        data.map((d: CongressMember) => {\r\n          return {\r\n            id: d.id,\r\n            title: d.title,\r\n            short_title: d.short_title,\r\n            first_name: d.first_name,\r\n            middle_name: d.middle_name,\r\n            last_name: d.last_name,\r\n            date_of_birth: d.date_of_birth,\r\n            gender: d.gender === \"M\" ? \"Male\" : \"Female\",\r\n            party: d.party === \"R\" ? \"Republican\" : \"Democrat\",\r\n            twitter_account: d.twitter_account,\r\n            facebook_account: d.facebook_account,\r\n            youtube_account: d.youtube_account,\r\n            url: d.url,\r\n            state: d.state\r\n          };\r\n        })\r\n      );\r\n    };\r\n    fetchData();\r\n    setMembersFiltered(members);\r\n  }, []);\r\n\r\n  useEffect(() => {}, [members, membersFiltered]);\r\n\r\n  const filteredMembers = (\r\n    members: CongressMember[],\r\n    value: string,\r\n    checkbox: CheckboxItems\r\n  ) => {\r\n    const findFilter = (title: string) => {\r\n      const filterKeys = Object.keys(checkbox);\r\n\r\n      const key = filterKeys.find(element => element === title);\r\n      console.log(key);\r\n    };\r\n\r\n    if (checkbox.checked) {\r\n      findFilter(\"Name\");\r\n    }\r\n    const membersFiltered = members.filter(member => {\r\n      return Object.values(member)\r\n        .join(\" \")\r\n        .toLowerCase()\r\n        .match(value.toLowerCase());\r\n    });\r\n    setMembersFiltered(membersFiltered);\r\n  };\r\n\r\n  if (!members.length) {\r\n    return <div className=\"loader\"></div>;\r\n  }\r\n  return (\r\n    <div className=\"congressList\">\r\n      <SearchInput data={members} onSearch={filteredMembers} />\r\n      <div className=\"membersList\">\r\n        <div className=\"membersList__titleContainer\">\r\n          <div className=\"membersList__titleContainer__title\">Name</div>\r\n          <div className=\"membersList__titleContainer__title\">Party</div>\r\n          <div className=\"membersList__titleContainer__title\">Gender</div>\r\n          <div className=\"membersList__titleContainer__title\">State</div>\r\n          <div className=\"membersList__titleContainer__title\">Detail</div>\r\n        </div>\r\n        {membersFiltered &&\r\n          membersFiltered.map((member: CongressMember, index: number) => (\r\n            <React.Fragment key={index}>\r\n              <div className=\"membersList__member\">\r\n                <div className=\"membersList__member-name\">\r\n                  {member.short_title} {member.first_name} {member.last_name}\r\n                </div>\r\n                <div className=\"membersList__member-name\">{member.party}</div>\r\n                <div className=\"membersList__member-name\">{member.gender}</div>\r\n                <div className=\"membersList__member-name\">{member.state}</div>\r\n                <div\r\n                  className=\"membersList__member-name membersList__member-name--viewMore\"\r\n                  onClick={() =>\r\n                    history.push({\r\n                      pathname: \"/detail\",\r\n                      state: { data: member }\r\n                    })\r\n                  }\r\n                >\r\n                  View More\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CongressList;\r\n","import React, { FC } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport CongressList from \"./containers/CongressList/CongressList\";\r\nimport CongressPersonDetail from \"./containers/CongressPersonDetail/CongressPersonDetail\";\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/\",\r\n    component: CongressList\r\n  },\r\n  {\r\n    path: \"/detail\",\r\n    component: CongressPersonDetail\r\n  }\r\n];\r\n\r\nconst App: FC = () => {\r\n  const rendeRoutes = () => {\r\n    return routes.map((route, index) => <Route key={index} exact {...route} />);\r\n  };\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\"></header>\r\n        <div className=\"wrapper\">\r\n          <Switch>{rendeRoutes()}</Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { FC } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { CongressMember } from \"../../models/models\";\nimport \"./CongressPersonDetailStyles.scss\";\n\ntype Props = RouteComponentProps;\n\nconst CongressPersonDetail: FC<Props> = ({ location, history }) => {\n  const memberInfo: CongressMember = location.state.data;\n  console.log(memberInfo);\n  return (\n    <div>\n      <div onClick={() => history.goBack()} className=\"backButton\">\n        Back\n      </div>\n      <div className=\"memberInfo\">\n        <div className=\"memberInfo__mainInfo\">\n          <div>\n            <h3>Personal Information</h3>\n            <span>Name: </span>\n            <span>\n              {memberInfo.first_name} {memberInfo.last_name}\n            </span>\n          </div>\n          <div>\n            <span>Title: </span> <span>{memberInfo.title}</span>\n          </div>\n          <div>\n            <span>Party: </span> <span>{memberInfo.party}</span>\n          </div>\n          <div>\n            <span>State: </span> <span>{memberInfo.state}</span>\n          </div>\n        </div>\n        <div className=\"memberInfo__contactInfo\">\n          <h3>Contact Information</h3>\n          <div>\n            <span>URL: </span>{\" \"}\n            <span>\n              <a href={memberInfo.url} target=\"_blank\">\n                {memberInfo.url}\n              </a>\n            </span>\n          </div>\n          <h4>Social Media</h4>\n          <div className=\"memberInfo__contactInfo-social\">\n            <span className=\"memberInfo__contactInfo-social-icon\">\n              <a\n                href={`https://www.youtube.com/${memberInfo.youtube_account}`}\n                target=\"_blank\"\n              >\n                <svg viewBox=\"0 0 512 512\" width=\"30\" height=\"30\">\n                  <path d=\"M490.24,113.92c-13.888-24.704-28.96-29.248-59.648-30.976C399.936,80.864,322.848,80,256.064,80c-66.912,0-144.032,0.864-174.656,2.912c-30.624,1.76-45.728,6.272-59.744,31.008C7.36,138.592,0,181.088,0,255.904C0,255.968,0,256,0,256c0,0.064,0,0.096,0,0.096v0.064c0,74.496,7.36,117.312,21.664,141.728c14.016,24.704,29.088,29.184,59.712,31.264C112.032,430.944,189.152,432,256.064,432c66.784,0,143.872-1.056,174.56-2.816c30.688-2.08,45.76-6.56,59.648-31.264C504.704,373.504,512,330.688,512,256.192c0,0,0-0.096,0-0.16c0,0,0-0.064,0-0.096C512,181.088,504.704,138.592,490.24,113.92z M192,352V160l160,96L192,352z\" />\n                </svg>\n              </a>\n            </span>\n            <span>{memberInfo.youtube_account}</span>\n          </div>\n          <div className=\"memberInfo__contactInfo-social\">\n            <span className=\"memberInfo__contactInfo-social-icon\">\n              <a\n                href={`https://www.facebook.com/${memberInfo.facebook_account}`}\n                target=\"_blank\"\n              >\n                <svg viewBox=\"0 0 96.124 96.123\" width=\"30\" height=\"30\">\n                  <path d=\"M72.089,0.02L59.624,0C45.62,0,36.57,9.285,36.57,23.656v10.907H24.037c-1.083,0-1.96,0.878-1.96,1.961v15.803c0,1.083,0.878,1.96,1.96,1.96h12.533v39.876c0,1.083,0.877,1.96,1.96,1.96h16.352c1.083,0,1.96-0.878,1.96-1.96V54.287h14.654c1.083,0,1.96-0.877,1.96-1.96l0.006-15.803c0-0.52-0.207-1.018-0.574-1.386c-0.367-0.368-0.867-0.575-1.387-0.575H56.842v-9.246c0-4.444,1.059-6.7,6.848-6.7l8.397-0.003c1.082,0,1.959-0.878,1.959-1.96V1.98C74.046,0.899,73.17,0.022,72.089,0.02z\" />\n                </svg>\n              </a>\n            </span>\n            <span>{memberInfo.facebook_account}</span>\n          </div>\n\n          <div className=\"memberInfo__contactInfo-social\">\n            <span className=\"memberInfo__contactInfo-social-icon\">\n              <a\n                href={`https://www.twitter.com/${memberInfo.twitter_account}`}\n                target=\"_blank\"\n              >\n                <svg viewBox=\"0 0 612 612\" width=\"30\" height=\"30\">\n                  <path d=\"M612,116.258c-22.525,9.981-46.694,16.75-72.088,19.772c25.929-15.527,45.777-40.155,55.184-69.411c-24.322,14.379-51.169,24.82-79.775,30.48c-22.907-24.437-55.49-39.658-91.63-39.658c-69.334,0-125.551,56.217-125.551,125.513c0,9.828,1.109,19.427,3.251,28.606C197.065,206.32,104.556,156.337,42.641,80.386c-10.823,18.51-16.98,40.078-16.98,63.101c0,43.559,22.181,81.993,55.835,104.479c-20.575-0.688-39.926-6.348-56.867-15.756v1.568c0,60.806,43.291,111.554,100.693,123.104c-10.517,2.83-21.607,4.398-33.08,4.398c-8.107,0-15.947-0.803-23.634-2.333c15.985,49.907,62.336,86.199,117.253,87.194c-42.947,33.654-97.099,53.655-155.916,53.655c-10.134,0-20.116-0.612-29.944-1.721c55.567,35.681,121.536,56.485,192.438,56.485c230.948,0,357.188-191.291,357.188-357.188l-0.421-16.253C573.872,163.526,595.211,141.422,612,116.258z\" />\n                </svg>\n              </a>\n            </span>\n            <span>{memberInfo.twitter_account}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CongressPersonDetail;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css'; \r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}